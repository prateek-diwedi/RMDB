{"version":3,"sources":["images/logo.png","components/GeneralComponent/MovieCircularPercentage.js","components/GeneralComponent/MovieCard.jsx","components/GeneralComponent/SearchBox.jsx","components/Landing Page/LandingPage.jsx","components/searchPage/SearchPage.jsx","components/GeneralComponent/CastCard.jsx","components/Movie Page/MovieScreenCard.jsx","components/Movie Page/helper.js","components/Movie Page/MoviePage.jsx","components/ActorPage/ActorPage.jsx","components/DarkMode/Toggle.jsx","components/DarkMode/DarkModeToggle.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MovieCircularPercentage","props","style","background","borderRadius","zIndex","from","percentage","to","rating","config","molasses","roundedPercentage","Math","round","text","styles","path","transform","transformOrigin","stroke","trail","strokeWidth","fontSize","fontWeight","animation","fill","MovieCard","type","undefined","id","title","textDecoration","className","width","border","paddingBottom","cursor","position","paddingLeft","paddingTop","src","poster","alt","height","character","SearchBox","useState","input","state","setState","history","useHistory","placeholder","aria-label","aria-describedby","onChange","e","target","value","onClick","push","window","location","reload","LandingPage","data","setData","page","setPage","totalPages","setTotalPages","url","process","useEffect","axios","get","then","res","apiData","results","total_pages","err","console","log","movieCardData","map","moviesData","index","imagePath","poster_path","key","random","name","vote_average","media_type","display","justifyContent","paddingRight","myLogo","length","padding","marginLeft","class","SearchPage","match","params","movie","searchedMovieData","CastCard","image","MovieScreenCard","date","released","releaseDate","slice","tagLine","overview","MoviePage","crew","setCast","movieId","imagelink","defaultImage","movieData","castAndCrew","credits","cast","castInfo","castData","castImage","profile_path","order","backgroundPath","backdrop_path","release_date","revenue","tagline","homePage","homepage","first_air_date","ActorPage","setCredits","actorId","actorInfo","actorCredits","alsoApearedIn","film","pictureImage","genderOfActor","gender","known_for_department","biography","birthday","place_of_birth","Toggle","checked","htmlFor","DarkModeToggle","darkMode","useDarkMode","goBack","marginTop","disable","toggle","enable","App","exact","component","Landing","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9165c1dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff8991fe.png\";","import React from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport { Spring, config } from \"react-spring/renderprops\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nfunction MovieCircularPercentage(props) {\n\n  return (\n    <div\n      style={{\n        background: 'black',\n        borderRadius: 100,\n        zIndex: 50,\n      }}\n    >\n      <Spring\n        from={{ percentage: 0 }}\n        to={{ percentage: props.rating }}\n        config={config.molasses}\n      >\n        {({ percentage }) => {\n          const roundedPercentage = Math.round(percentage);\n          return (\n            <CircularProgressbar\n              percentage={roundedPercentage}\n              text={`${roundedPercentage}%`}\n              styles={{\n                path: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"center center\",\n                  stroke: percentage >= 70 ? \"#22D07A\" : \"#D3D530\"\n                },\n                trail: {\n                  strokeWidth: 0\n                },\n                text: {\n                  fontSize: 22,\n                  fontWeight: 800,\n                  animation: \"fadein 2s\",\n                  fill: percentage >= 70 ? \"#22D07A\" : \"#D3D530\"\n                }\n              }}\n            />\n          );\n        }}\n      </Spring>\n    </div>\n  );\n}\n\n\nexport default MovieCircularPercentage\n","import React from 'react'\nimport MovieRating from './MovieCircularPercentage'\nimport { Link } from 'react-router-dom';\n\nfunction MovieCard(props) {\n  let type = ''\n  if (props.type == undefined) {\n    type = 'movie'\n  } else {\n    type = props.type\n  }\n  return (\n    <div>\n      <Link to={`/movie/${props.id}/${type}/${props.title}`} style={{ textDecoration: 'none' }} >\n\n        <div className=\"card\" id='movieCardId' style={{ width: '270px', border: 'none', paddingBottom: '10%', textDecoration: 'none', cursor: 'pointer' }}>\n          <div className=\"MovieImage\" >\n            <div className=\"movieRating\" style={{\n              position: 'absolute',\n              paddingLeft: '10px',\n              paddingTop: '370px',\n              zIndex: 10\n            }}>\n              <div className='movierating' style={{ width: '60px' }}>\n                <MovieRating rating={props.rating} />\n              </div>\n            </div>\n            <img src={props.poster} alt='movieImage' style={{ height: '400px', borderRadius: '5%' }} />\n\n          </div>\n          <div className=\"movieTitle\" style={{ paddingTop: '14%', paddingLeft: '2%' }} >\n            <h4> {props.title} </h4>\n            <h6> {props.character} </h6>\n          </div>\n        </div>\n\n      </Link>\n    </div>\n  )\n}\n\nexport default MovieCard\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nfunction SearchBox() {\n  const [state, setState] = useState({ input: '' })\n\n  const history = useHistory();\n\n  let updateInput = input => {\n    setState({ input })\n  }\n\n  const handleClick = () => {\n    setState({ input: '' })\n    history.push(`/search/${state.input}`)\n    window.location.reload();\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-3 col-md-3 col-xs-3'></div>\n      <div className='col-sm-6 col-md-6 col-xs-6'>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" className=\"form-control\"\n            placeholder=\"Search...\" aria-label=\"Search\"\n            aria-describedby=\"button-addon2\"\n            onChange={e => updateInput(e.target.value)}\n            value={state.input}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" onClick={() => handleClick()} type=\"button\" id=\"button-addon2\">Search</button>\n          </div>\n        </div>\n      </div>\n      <div className='col-sm-3 col-md-3 col-xs-3'></div>\n    </div>\n  )\n}\n\n\n\nexport default SearchBox\n","import React, { useEffect, useState } from 'react'\nimport MovieCard from '../GeneralComponent/MovieCard'\nimport axios from 'axios'\nimport SearchBox from '../GeneralComponent/SearchBox'\nimport '../GeneralComponent/button.scss'\nimport myLogo from '../../images/logo.png'\n\n\nfunction LandingPage() {\n\n  const [data, setData] = useState([]);\n\n  const [page, setPage] = useState(1)\n\n  const [totalPages, setTotalPages] = useState(null)\n\n  const logo = 'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg';\n\n  // link added infront of the image data we are getting from api\n  const imagelink = 'https://image.tmdb.org/t/p/w440_and_h660_face/'\n\n  //default image if there is no image\n  const defaultImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWAFqXrJQ-ZGNDEA0AVJXXF2p55MWpuHRujST0xH9qFjiFNpln&usqp=CAU';\n\n  // popular movies url\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${page}`\n\n  // fetching data for popular movies\n  useEffect(() => {\n    axios.get(url)\n      .then((res) => {\n        const apiData = res.data\n        setData(apiData.results);\n        setTotalPages(apiData.total_pages)\n      }, (err) => {\n        console.log('Error while fetching data ---->', err)\n      })\n  }, [page])\n\n  const movieCardData = data.map((moviesData, index) => {\n    var imagePath;\n    if (moviesData.poster_path == null || moviesData.poster_path == \"\") {\n      imagePath = defaultImage;\n    } else {\n      imagePath = imagelink + moviesData.poster_path;\n    }\n\n    return <MovieCard key={moviesData.id || Math.random() * 100} id={moviesData.id || Math.random() * 100} title={moviesData.title || moviesData.name} rating={moviesData.vote_average * 10 || 0} poster={imagePath} type={moviesData.media_type} />\n  })\n\n  //next page funbction for pagination\n  const nextPage = () => {\n    if (data && page !== totalPages) {\n      setPage(page + 1)\n    }\n  }\n\n  //  previous page function for pagination\n  const previousPage = () => {\n    if (data && page !== 1) {\n      setPage(page - 1)\n    }\n  }\n\n  return (\n    <div>\n      <h1 id='prateek' style={{display:'flex', justifyContent: 'space-between', paddingLeft:'2%', paddingRight:'2%'}} >\n        <img src={myLogo} alt='myLogo' style={{ height:'50px'}} />\n        <img src={logo} alt='tmdb'  style={{height:'50px'}} />\n      </h1>\n\n      <SearchBox />\n\n      {data.length === 0 ? (\n        <img src='https://i.imgur.com/FmYeL3j.gif' alt='loading Image' />\n      ) : (\n          <div>\n            <h2 style={{ paddingLeft: '14%', paddingTop: '2%' }}>\n              Popular Right Now\n            </h2>\n\n            <div className=\"card-columns\"\n              style={{ padding: '5%', marginLeft: '9%' }} >\n              {movieCardData}\n            </div>\n\n            <div className='paginationButton'\n              style={{ display: 'flex', justifyContent: 'space-around', paddingBottom: '5%' }}>\n\n              <button onClick={previousPage}\n                className='button' >\n                <i class=\"fa  fa-chevron-left\"></i>\n                  Previous\n              </button>\n\n              <button onClick={nextPage}\n                className='button'>\n                Next\n                <i class=\"fa  fa-chevron-right\"></i>\n              </button>\n\n            </div>\n          </div>\n        )}\n\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useEffect } from 'react'\nimport MovieCard from '../GeneralComponent/MovieCard'\nimport axios from 'axios'\nimport SearchBox from '../GeneralComponent/SearchBox'\n\nfunction SearchPage(props) {\n  const [data, setData] = useState([]);\n\n  const [page, setPage] = useState(1)\n\n  const [totalPages, setTotalPages] = useState(null)\n\n  // link added infront of the image data we are getting from api\n  const imagelink = 'https://image.tmdb.org/t/p/w440_and_h660_face/'\n\n  //default image if there is no image\n  const defaultImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWAFqXrJQ-ZGNDEA0AVJXXF2p55MWpuHRujST0xH9qFjiFNpln&usqp=CAU';\n\n  // popular movies url\n  const url = `https://api.themoviedb.org/3/search/multi?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&query=${props.match.params.movie}&page=${page}&include_adult=false`\n\n  // fetching data for popular movies\n  useEffect(() => {\n    axios.get(url)\n      .then((res) => {\n        const apiData = res.data;\n        setData(apiData.results);\n        setTotalPages(apiData.total_pages)\n      }, (err) => {\n        console.log('Error while fetching data ---->', err)\n      })\n  }, [page])\n\n  const searchedMovieData = data.map((moviesData, index) => {\n    var imagePath;\n    if (moviesData.poster_path == null || moviesData.poster_path == \"\") {\n      imagePath = defaultImage;\n    } else {\n      imagePath = imagelink + moviesData.poster_path;\n    }\n\n    return <MovieCard key={moviesData.id || Math.random() * 100} id={moviesData.id || Math.random() * 100} title={moviesData.title || moviesData.name} rating={moviesData.vote_average * 10 || 0} poster={imagePath} type={moviesData.media_type} />\n  })\n\n  //next page funbction for pagination\n  const nextPage = () => {\n    if (data && page !== totalPages) {\n      setPage(page + 1)\n    }\n  }\n\n  //  previous page function for pagination\n  const previousPage = () => {\n    if (data && page !== 1) {\n      setPage(page - 1)\n    }\n  }\n\n  return (\n    <div>\n      <h1 id='prateek'>\n        Movie Database\n      </h1>\n\n      <SearchBox />\n\n\n      <h2 style={{ paddingLeft: '14%', paddingTop: '2%' }}> Showing Results For {props.match.params.movie} </h2>\n      <div className=\"card-columns\" style={{ padding: '5%', marginLeft: '9%' }} >\n        {searchedMovieData}\n      </div>\n\n      <div className='paginationButton' style={{ display: 'flex', justifyContent: 'space-around', paddingBottom: '5%' }}>\n        <button onClick={previousPage} className='button' ><i class=\"fa  fa-chevron-left\"></i> Previous </button>\n        <button onClick={nextPage} className='button'> Next <i class=\"fa  fa-chevron-right\"></i></button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default SearchPage\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nfunction CastCard(props) {\n\n  return (\n\n    <div>\n      <Link to={`/person/${props.id}/${props.name}`} style={{ textDecoration: 'none', cursor:'pointer' }} >\n        <div>\n          <div className=\"card\" id='castCardId' style={{ width: '270px', border: 'none', textDecoration: 'none', background: 'transparent' }}>\n            <div className=\"MovieImage\" >\n              <img src={props.image} alt='movieImage' style={{ height: '400px', borderRadius: '5%' }} />\n            </div>\n\n            <div className=\"castName\" style={{ paddingLeft: '2%' }} >\n              <h3> {props.name} </h3>\n              <h6>{props.character}</h6>\n            </div>\n          </div>\n\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default CastCard\n","import React from 'react'\nimport MovieRating from '../GeneralComponent/MovieCircularPercentage'\nimport CastCard from '../GeneralComponent/CastCard'\nimport { year } from './helper'\nimport './movieinfo.scss'\n\nfunction MovieScreenCard(props) {\n\n\n  const released = year(props.releaseDate);\n  return (\n    <div>\n      <div className=\"card bg-dark text-white\">\n        <img className=\"card-img\" src={props.background} alt=\"Card image\" />\n        <div className=\"title\">\n          <p> {props.title} ( {released} ) </p>\n          <p className='tagline'> {props.tagLine} </p>\n          <p className='discription'> {props.overview} </p>\n        </div>\n        <div className='movieCardRating'>\n          <MovieRating rating={props.rating} />\n        </div>\n        <div className=\"card-img-overlay\">\n          <div className='posterDiv'>\n            <img className='moviePoster' src={props.image} alt='movie poster' />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default MovieScreenCard\n","export const year = (date) => {\n  if (!date) {\n    return 'N/A'\n  }\n  return date.slice(0, 4)\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CastCard from '../GeneralComponent/CastCard'\nimport MovieInfoCard from './MovieScreenCard'\nimport '../Movie Page/movieinfo.scss'\n\nfunction MoviePage(props) {\n\n  const [data, setData] = useState([])\n\n  const [crew, setCast] = useState([])\n\n  // movie id we get from params\n  const movieId = props.match.params.id\n\n  // type of the data movie or tv\n  const type = props.match.params.type\n\n  // link added infront of the image data we are getting from api\n  const imagelink = 'https://image.tmdb.org/t/p/w440_and_h660_face/'\n\n  // link adde before background url\n  const backgroundLink = 'https://image.tmdb.org/t/p/w1280/'\n\n  //default image if there is no image\n  const defaultImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWAFqXrJQ-ZGNDEA0AVJXXF2p55MWpuHRujST0xH9qFjiFNpln&usqp=CAU';\n  // default background image\n  const defaultBackground = 'https://www.pptgrounds.com/wp-content/uploads/2012/08/Blue-movie-film-strip-backgrounds.jpg'\n\n  // url to ketch movie data\n  const url = `https://api.themoviedb.org/3/${type}/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&append_to_response=credits`\n\n  //  fetching the movie data\n  useEffect(() => {\n    axios.get(url)\n      .then((res) => {\n        const movieData = res.data;\n        const castAndCrew = res.data.credits;\n\n        setData(movieData)\n        setCast(castAndCrew.cast)\n      }, err => {\n        console.log('error while fetching movie data', err)\n      })\n  }, [])\n\n\n  //  maping the cast\n  const castInfo = crew.map((castData, index) => {\n    var castImage;\n    if (castData.profile_path == null || castData.profile_path == \"\") {\n      castImage = defaultImage;\n    } else {\n      castImage = imagelink + castData.profile_path;\n    }\n\n    return <CastCard key={castData.id} id={castData.id} character={castData.character} name={castData.name} image={castImage} order={castData.order} />\n  })\n\n\n  let imagePath = ''\n  if (data.poster_path == null || data.poster_path == \"\") {\n    imagePath = defaultImage;\n  } else {\n    imagePath = imagelink + data.poster_path;\n  }\n\n  let backgroundPath = ''\n  if (data.backdrop_path == null || data.backdrop_path == '') {\n    backgroundPath = defaultBackground;\n  } else {\n    backgroundPath = backgroundLink + data.backdrop_path\n  }\n\n  return (\n    <div>\n      <div className='movieInfoCard'>\n        {/* {movieData} */}\n        <MovieInfoCard\n          key={data.id}\n          id={data.id}\n          background={backgroundPath}\n          image={imagePath}\n          title={data.title || data.name}\n          overview={data.overview || 'N/A'}\n          releaseDate={data.release_date || 'N/A'}\n          revenue={data.revenue || 'N/A'}\n          tagLine={data.tagline || 'N/A'}\n          rating={data.vote_average * 10 || 0}\n          homePage={data.homepage}\n          releaseDate={data.release_date || data.first_air_date}\n        />\n      </div>\n      <div className='castContainer'>\n        <h2> Cast </h2>\n      </div>\n      <div className=\"card-columns\"\n        style={{ padding: '5%', marginLeft: '9%' }} >\n        {castInfo}\n      </div>\n    </div>\n  )\n}\n\nexport default MoviePage\n","import React, { useState, useEffect } from 'react';\nimport MovieCard from '../GeneralComponent/MovieCard'\nimport axios from 'axios';\nimport './actorPage.scss'\n\nfunction ActorPage(props) {\n\n  const [data, setData] = useState([]);\n\n  const [credits, setCredits] = useState([]);\n\n  //link for the image\n  const imageLink = 'https://image.tmdb.org/t/p/w1280/'\n\n  // link for movie image\n  const movieLink = 'https://image.tmdb.org/t/p/w440_and_h660_face/'\n\n  //default image if there is no image\n  const defaultImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWAFqXrJQ-ZGNDEA0AVJXXF2p55MWpuHRujST0xH9qFjiFNpln&usqp=CAU';\n\n  const actorId = props.match.params.id\n\n  const url = `https://api.themoviedb.org/3/person/${actorId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&append_to_response=credits`\n\n  useEffect(() => {\n    axios.get(url)\n      .then((res) => {\n        const actorInfo = res.data;\n        const actorCredits = res.data.credits.cast\n        setData(actorInfo);\n        setCredits(actorCredits);\n      })\n  }, [])\n\n  // maping movies of actor \n  const alsoApearedIn = credits.map((film, index) => {\n    var pictureImage;\n    if (film.poster_path == null || film.poster_path == \"\") {\n      pictureImage = defaultImage;\n    } else {\n      pictureImage = movieLink + film.poster_path;\n    }\n    return <MovieCard\n      key={film.id}\n      id={film.id}\n      poster={pictureImage}\n      title={film.title}\n      character={film.character}\n    />\n  })\n\n  //actor image\n  let imagePath = ''\n  if (data.profile_path == null || data.profile_path == \"\") {\n    imagePath = defaultImage;\n  } else {\n    imagePath = imageLink + data.profile_path;\n  }\n\n  //gender \n  let genderOfActor = ''\n  if (data.gender === 2) {\n    genderOfActor = 'Male'\n  } else {\n    genderOfActor = 'Female'\n  }\n\n\n  return (\n    <div>\n      <div className=\"generalFacts\">\n        <div className=\"actorImage\">\n          <img src={imagePath} alt={data.name} />\n        </div>\n        <div className=\"allfacts\">\n          <div className=\"actorName\">\n            <h2>{data.name}</h2>\n          </div>\n          <div className=\"knownFor\">\n            <h5>Known For </h5>\n            <h6>{data.known_for_department}</h6>\n          </div>\n          <div className=\"biography\">\n            <h5>Biography </h5>\n            <h6>{data.biography}</h6>\n          </div>\n          <div className=\"gender\">\n            <h5>Gender </h5>\n            <h6>{genderOfActor}</h6>\n          </div>\n          <div className=\"birthday\">\n            <h5>Birthday </h5>\n            <h6>{data.birthday}</h6>\n          </div>\n          <div className=\"placeOfBirth\">\n            <h5>Place of Birth </h5>\n            <h6>{data.place_of_birth}</h6>\n          </div>\n\n        </div>\n      </div>\n      <div className=\"also\" >\n        <h4> Also known For </h4>\n      </div>\n      <div className=\"card-columns\"\n        style={{ padding: '5%', marginLeft: '5%' }} >\n        {alsoApearedIn}\n      </div>\n    </div>\n  )\n}\n\nexport default ActorPage\n","import React from 'react';\n\nconst Toggle = ({ checked, onChange }) => (\n  <span className=\"toggle-control\">\n    <input\n      className=\"dmcheck\"\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onChange}\n      id=\"dmcheck\"\n    />\n    <label htmlFor=\"dmcheck\" />\n  </span>\n);\n\nexport default Toggle;","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Toggle from './Toggle';\nimport useDarkMode from 'use-dark-mode';\nimport './backButton.scss'\n\nconst DarkModeToggle = () => {\n  const darkMode = useDarkMode(false);\n\n  // back button working\n  let history = useHistory();\n\n  return (\n    <div className=\"dark-mode-toggle\">\n      <div className=\"backButton\"\n        onClick={() => history.goBack()} >\n        <i class=\"fa fa-arrow-left my-float\"\n          style={{ marginTop: '22px' }}></i>\n      </div>\n      <button type=\"button\" onClick={darkMode.disable}>\n        ☀\n      </button>\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\n      <button type=\"button\" onClick={darkMode.enable}>\n        ☾\n      </button>\n    </div>\n  );\n};\n\nexport default DarkModeToggle;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\nimport Landing from './components/Landing Page/LandingPage'\nimport SearchPage from './components/searchPage/SearchPage'\nimport MoviePage from './components/Movie Page/MoviePage'\nimport ActorPage from './components/ActorPage/ActorPage'\nimport DarkModeToggle from './components/DarkMode/DarkModeToggle';\nimport './App.scss'\n//bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <DarkModeToggle />\n      <Route exact path='/' component={Landing} />\n      <Route exact path='/search/:movie' component={SearchPage} />\n      <Route exact path='/movie/:id/:type/:movie' component={MoviePage} />\n      <Route exact path='/person/:id/:name' component={ActorPage} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}